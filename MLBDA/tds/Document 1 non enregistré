-- compléter l'entête 
-- ==================

-- NOM    : kherfallah
-- Prénom : celia


-- ================================================

set sqlbl on


-- nettoyer le compte
@vider

@liste

-- Définition des types de données

prompt

-- Liste de tous les types créés

-- 2 type de pieces :
--   	  piece de base(nom,type,matiere)
--	  piece composite
-- matiere( nom,kilo ,masse)

-- creation des types :

CREATE TYPE matiere AS OBJECT
( nom VARCHAR2(10),
kilo INT,
masse INT
);
@compile


CREATE  TYPE piece AS OBJECT 
(nom VARCHAR(20)
)
not final ;
@compile
@liste

CREATE  TYPE piece_base under piece 
(mat REF  MATIERE)
not final ;
@compile
@liste

CREATE TYPE piece_cylindre UNDER piece_base
(r INT,
h INT
);
@compile
@liste

CREATE TYPE piece_sphere  UNDER piece_base
( r INT
);
@compile
@liste

CREATE  TYPE ens_piece AS TABLE OF ref piece;
@compile
@liste

CREATE TYPE composite UNDER piece
(
lesEns_pieces  ens_piece
);
@compile
@liste




--creation des tables ";" SUFFIT pas besoin de @compile 

CREATE TABLE Table_piece_base of piece_base;
@liste
CREATE TABLE Table_composite of Composite
NESTED TABLE lesEns_pieces STORE AS nt_lesEn_pieces;
@liste

CREATE TABLE table_matiere OF matiere;
@liste


-- inserer des elements dans la table matiere
INSERT INTO table_matiere VALUES (matiere('bois',10,2));
@compile

INSERT INTO table_matiere VALUES (matiere('fer',5,3));
@compile

INSERT INTO table_matiere VALUES (matiere('ferrite',10,8));
@compile

INSERT INTO table_matiere VALUES (matiere('ferrite',6,4));
@compile

-- AFFICHAGE DE LA TABLE_MATIERE
Select *
FROM table_matiere
@compile
--  le nom et le prix au kilo des matieres
SELECT  m.nom
FROM table_matiere m;
@compile


INSERT INTO table_composite VALUES
('c1',
table_composite(
		ens_piec(
			PIECE_SPHERE(
				'boul',1,
				table_matiere(2,1)
				    )
		         )
                )
);
@compile


INSERT INTO Table_piece_base VALUES (
piece_sphere
('hghj',
(select ref(m)
from table_matiere m
where m.masse = 8 ) ,
5
)
);
@compile



